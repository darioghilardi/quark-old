Question:
  columns:
    id:								{type: integer, notnull: true, autoincrement: true, primary: true}
    user_id:					{type: integer, notnull: true}
    title:						{type: string(255), notnull: true}
    body:             {type: string(10000), notnull: true}
    body_html:        {type: string(10000), notnull: true}
    views:            {type: integer, notnull: true, default: 0}
    interested_users:	{type: integer, default: 0}
    answer_count:     {type: integer, default: 0}
    created_at:				{type: timestamp, notnull: true}
    updated_at:				{type: timestamp, notnull: true}    
  relations:
    User:							{onDelete: CASCADE, local: user_id, class: sfGuardUser}

QuestionTag:
  columns:
    id:             {type: integer, notnull: true, autoincrement: true, primary: true}
    question_id:		{type: integer, notnull: true}
    tag_id:         {type: integer, notnull: true}
  relations:
    Question:				{onDelete: CASCADE, local: question_id, foreign: id}
    Tag:            {onDelete: CASCADE, local: tag_id, foreign: id}

Tag:
  columns:
    id:             {type: integer, notnull: true, autoincrement: true, primary: true}
    name:           {type: string(100), notnull: true, unique: true}

Answer:
  columns:
    id:							{type: integer, notnull: true, autoincrement: true, primary: true}
    question_id:		{type: integer, notnull: true}
    user_id:				{type: integer, notnull: true}
    body:           {type: string(10000), notnull: true}
    body_html:      {type: string(10000), notnull: true}
    created_at:			{type: timestamp, notnull: true}
    votes:					{type: integer, default:0}
    accepted:       {type: boolean, default: false}
  relations:
    Question:				{onDelete: CASCADE, local: question_id, foreign: id, foreignAlias: ask_question}
    User:						{onDelete: CASCADE, local: user_id, class: sfGuardUser}

Interest:
  columns:
    question_id:		{type: integer, notnull: true}
    user_id:				{type: integer, notnull: true}
    value:          {type: integer, notnull: true, unsigned: false}
    created_at:			{type: timestamp, notnull: true}    
  relations:
    Question:				{onDelete: CASCADE, local: question_id, foreign: id}
    User:						{onDelete: CASCADE, local: user_id, class: sfGuardUser}

Rating:
  columns:
    answer_id:			{type: integer, notnull: true}
    user_id:				{type: integer, notnull: true}
    value:          {type: integer, notnull: true, unsigned: false}
    created_at:			{type: timestamp, notnull: true}
  relations:
    Answer:					{onDelete: CASCADE, local: answer_id, foreign: id}
    User:						{onDelete: CASCADE, local: user_id, class: sfGuardUser}

Accept:
  columns:
    question_id:    {type: integer, notnull: true, unique: true}
    answer_id:      {type: integer, notnull: true, unique: true}
    created_at:     {type: timestamp, notnull: true}
  relations:
    Question:				{onDelete: CASCADE, local: question_id, foreign: id}
    Answer:         {onDelete: CASCADE, local: answer_id, foreign: id}

StaticContent:
  columns:
    id:               {type: integer, notnull: true, autoincrement: true, primary: true}
    title:            {type: string(255), notnull: true}
    path:             {type: varchar(50), notnull: true, unique: true}
    body:             {type: string()}

UserProfile:
  inheritance:
    type: column_aggregation
    extends: sfGuardUserProfile
  columns:
    reputation:       {type: integer, notnull: true, default: 0}
