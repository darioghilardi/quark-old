<?php

/**
 * BaseAccept
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $question_id
 * @property integer $answer_id
 * @property timestamp $created_at
 * @property Question $Question
 * @property Answer $Answer
 * 
 * @method integer   getQuestionId()  Returns the current record's "question_id" value
 * @method integer   getAnswerId()    Returns the current record's "answer_id" value
 * @method timestamp getCreatedAt()   Returns the current record's "created_at" value
 * @method Question  getQuestion()    Returns the current record's "Question" value
 * @method Answer    getAnswer()      Returns the current record's "Answer" value
 * @method Accept    setQuestionId()  Sets the current record's "question_id" value
 * @method Accept    setAnswerId()    Sets the current record's "answer_id" value
 * @method Accept    setCreatedAt()   Sets the current record's "created_at" value
 * @method Accept    setQuestion()    Sets the current record's "Question" value
 * @method Accept    setAnswer()      Sets the current record's "Answer" value
 * 
 * @package    quark
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAccept extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('accept');
        $this->hasColumn('question_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('answer_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'unique' => true,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Question', array(
             'local' => 'question_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Answer', array(
             'local' => 'answer_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}