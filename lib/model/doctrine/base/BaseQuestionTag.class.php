<?php

/**
 * BaseQuestionTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $question_id
 * @property integer $tag_id
 * @property Question $Question
 * @property Tag $Tag
 * 
 * @method integer     getId()          Returns the current record's "id" value
 * @method integer     getQuestionId()  Returns the current record's "question_id" value
 * @method integer     getTagId()       Returns the current record's "tag_id" value
 * @method Question    getQuestion()    Returns the current record's "Question" value
 * @method Tag         getTag()         Returns the current record's "Tag" value
 * @method QuestionTag setId()          Sets the current record's "id" value
 * @method QuestionTag setQuestionId()  Sets the current record's "question_id" value
 * @method QuestionTag setTagId()       Sets the current record's "tag_id" value
 * @method QuestionTag setQuestion()    Sets the current record's "Question" value
 * @method QuestionTag setTag()         Sets the current record's "Tag" value
 * 
 * @package    quark
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseQuestionTag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('question_tag');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             ));
        $this->hasColumn('question_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('tag_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Question', array(
             'local' => 'question_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Tag', array(
             'local' => 'tag_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}